<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>suspense on Daishi Kato&#39;s blog</title>
    <link>https://blog.axlight.com/tags/suspense/</link>
    <description>Recent content in suspense on Daishi Kato&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Nov 2019 21:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://blog.axlight.com/tags/suspense/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Developing a React Library for Suspense for Data Fetching in Concurrent Mode</title>
      <link>https://blog.axlight.com/posts/developing-a-react-library-for-suspense-for-data-fetching-in-concurrent-mode/</link>
      <pubDate>Sun, 03 Nov 2019 21:00:00 +0900</pubDate>
      
      <guid>https://blog.axlight.com/posts/developing-a-react-library-for-suspense-for-data-fetching-in-concurrent-mode/</guid>
      <description>Introduction We have been waiting for &amp;ldquo;Suspense for Data Fetching&amp;rdquo; for a long time. It is now provided as an experimental feature in the experimental channel.
Check out the official docs for details.
 Introducing Concurrent Mode Suspense for Data Fetching Concurrent UI Patterns Adopting Concurrent Mode Concurrent Mode API Reference  They are trying best to explain new mind sets with analogies. That means it&amp;rsquo;s totally different from the usage with traditional React.</description>
    </item>
    
  </channel>
</rss>